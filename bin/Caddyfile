# After making changes to this file run:
# caddy fmt -overwrite bin/Caddyfile
# to have caddy formate it.
# It won't start if there are formatting errors.

# Tail the logs with:
# tail -F /usr/local/var/log/caddy/caddy_access.log

# Global options
{
	# https://caddyserver.com/docs/automatic-https#local-https
	local_certs
	# https://caddyserver.com/docs/caddyfile/directives/log#file
	log {
		output file /usr/local/var/log/caddy/caddy_access.log
	}
	admin localhost:3019
}

# explicitly list http endpoints so caddy doesn't do
# automatic http -> https redirection.
http://lessonly.test:8081,
http://*.lessonly.test:8081,
lessonly.test:8443,
*.lessonly.test:8443 {
	encode zstd gzip

	@https {
		protocol https
	}
	header @https Strict-Transport-Security "max-age=31536000; includeSubDomains; always"

	# https://caddyserver.com/docs/caddyfile/directives/reverse_proxy#https
	reverse_proxy 127.0.0.1:3000 {
		header_up Host {upstream_hostport}
		header_up X-Forwarded-Host {host}
	}
	reverse_proxy /skills* 127.0.0.1:3001
	reverse_proxy /skills/graphql* 127.0.0.1:3002
}

http://readiness-bff.test:8081,
readiness-bff.test:8443 {
	encode zstd gzip

	@https {
		protocol https
	}
	header @https Strict-Transport-Security "max-age=31536000; includeSubDomains; always"

	# https://caddyserver.com/docs/caddyfile/directives/reverse_proxy#https
	reverse_proxy 127.0.0.1:3031 {
		header_up Host {upstream_hostport}
	}
}

# to test if /etc/hosts, port forwarding, and caddy are working:
# curl -v https://caddystatus.lessonly.test
http://caddystatus.lessonly.test:8081,
caddystatus.lessonly.test:8443 {
	respond "Caddy works: {method} {scheme}://{host}{path}"
}
